-- loadstring(game:HttpGet("https://raw.githubusercontent.com/DragonLords03/Open/main/Pixel%20Incremental%202"))()
local VirtualUser = game:GetService("VirtualUser")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

Players.LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
    print("Anti AFK: Prevented kick due to inactivity.")
end)

local Library = loadstring(Game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()

local function fireRemoteEvent(remoteEvent, ...)
    ReplicatedStorage.Assets.RemoteEvents[remoteEvent]:FireServer(...)
end

local function spendColor(color, amount, times)
    local args = { color, amount }
    for _ = 1, times do
        fireRemoteEvent("SpendColor", unpack(args))
        task.wait(0.5)
    end
end

local function Collect_Pixel()
    while _G.Auto_Collect_Pixel do
        for _, Drop in pairs(game:GetService("Workspace").Pixels:GetChildren()) do
            if Drop:IsA("BasePart") then
                Drop.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
            end
        end
        task.wait(0.1)
    end
end

local function Collect_Stardust()
    while _G.Auto_Collect_Stardust do
        for _, Drop in pairs(game:GetService("Workspace").Stardust:GetChildren()) do
            if Drop:IsA("BasePart") then
                Drop.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
            end
        end
        task.wait(0.1)
    end
end


local function Click()
    while _G.Auto_Click do
        fireRemoteEvent("Click")
        task.wait(0.1)
    end
end

local function Color()
    spendColor("Purple", 10, 4)
    spendColor("Blue", 10, 6)
    spendColor("Blue", 1, 6)
    fireRemoteEvent("SpendColor", "Green", 100)
end

local function Buy(upgradeList, interval)
    while _G[upgradeList.autoFlag] do
        for _, upgrade in ipairs(upgradeList.upgrades) do
            fireRemoteEvent("BuyUpgrade", unpack(upgrade))
            task.wait(interval)
        end
    end
end

local buyLists = {
    Buy_Pixel = {
        autoFlag = "Buy_Pixel",
        upgrades = {
            {"1_1", true},
            {"1_2", true},
            {"1_3", true}
        },
        interval = 1
    },
    Buy_Prestige = {
        autoFlag = "Buy_Prestige",
        upgrades = {
            {"4_3", true},
            {"4_1", true},
            {"4_2", true},
            {"4_4", true}
        },
        interval = 2
    },
    Buy_Click = {
        autoFlag = "Buy_Click",
        upgrades = {
            {"5_1", true},
            {"5_2", true},
            {"5_3", true}
        },
        interval = 2.5
    },
    Buy_RNG = {
        autoFlag = "Buy_RNG",
        upgrades = {
            {"3_3", true},
            {"3_4", true},
            {"3_1", true},
            {"3_2", true}
        },
        interval = 10
    },
    Buy_Gems = {
        autoFlag = "Buy_Gems",
        upgrades = {
            {"8_1", true},
            {"8_3", true},
            {"8_2", true},
            {"8_4", true}
        },
        interval = 8
    },
    Buy_Research = {
        autoFlag = "Buy_Research",
        upgrades = {
            {"7_1", true},
            {"7_3", true},
            {"7_4", true},
            {"7_6", true},
            {"7_8", true},
            {"7_12", true},
            {"7_11", true},
            {"7_16", true},
            {"7_13", true},
            {"7_15", true},
            {"7_17", true},
            {"7_19", true},
            {"7_22", true},
            {"7_21", true},
            {"7_24", true},
            {"7_26", true}
        },
        interval = 0.99
    },
    Buy_Scrap = {
        autoFlag = "Buy_Scrap",
        upgrades = {
            {"11_1", true},
            {"11_2", true},
            {"11_3", true},
            {"11_5", true},
            {"11_6", true},
            {"12_2", true},
            {"12_3", true},
            {"13_2", true},
            {"13_3", true}
        },
        interval = 1.25
    },
    Buy_Stardust = {
        autoFlag = "Buy_Stardust",
        upgrades = {
            {"15_1", true},
            {"15_5", true},
            {"15_3", true},
            {"15_4", true},
            {"15_2", true},
            {"15_7", true},
            {"15_6", true}
        },
        interval = 2.25
    }
}

local function Farm()
    local humanoidRootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid")

    if not humanoidRootPart or not humanoid then return end

    while _G.Auto_Farm do
        humanoidRootPart.CFrame = CFrame.new(game:GetService("Workspace").Research.Button.Touch.CFrame.Position + Vector3.new(0, 1, 0))
        humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
        task.wait(1)
        humanoidRootPart.CFrame = CFrame.new(game:GetService("Workspace").Runes.Button.Touch.CFrame.Position + Vector3.new(0, 1, 0))
        humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
        task.wait(59)
    end
end

local function Farm2()
    local humanoidRootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid")

    if not humanoidRootPart or not humanoid then return end

    while _G.Auto_Farm2 do
        humanoidRootPart.CFrame = CFrame.new(game:GetService("Workspace").Runes.Button.Touch.CFrame.Position + Vector3.new(0, 1, 0))
        humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
        task.wait(20)
        humanoidRootPart.CFrame = CFrame.new(game:GetService("Workspace").FactoryConveyor.Spawn.Touch.CFrame.Position + Vector3.new(0, 1, 0))
        humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
        task.wait(40)
    end
end

local ui = Library:NewWindow("Pixel Incremental 2")
local a = ui:NewSection("Farm")
local b = ui:NewSection("Auto Buy")

a:CreateToggle("Auto Collect Pixel", function(value)
    _G.Auto_Collect_Pixel = value
    if value then
        Collect_Pixel()
    end
end)

a:CreateToggle("Auto Collect Sratdust", function(value)
    _G.Auto_Collect_Stardust = value
    if value then
        Collect_Stardust()
    end
end)

a:CreateToggle("Auto Click", function(value)
    _G.Auto_Click = value
    if value then
        Click()
    end
end)

a:CreateToggle("Farm Rune/Research", function(value)
    _G.Auto_Farm = value
    if value then
        Farm()
    end
end)

a:CreateToggle("Farm Rune/Scrap", function(value)
    _G.Auto_Farm2 = value
    if value then
        Farm2()
    end
end)

local order = {
    "Buy_RNG",
    "Buy_Pixel",
    "Buy_Prestige",
    "Buy_Click",
    "Buy_Gems",
    "Buy_Research",
    "Buy_Scrap",
    "Buy_Stardust"
}

for _, key in ipairs(order) do
    local upgradeList = buyLists[key]
    if upgradeList then
        b:CreateToggle(key:gsub("_", " "), function(value)
            _G[key] = value
            if value then
                task.spawn(function()
                    Buy(upgradeList, upgradeList.interval)
                end)
            end
        end)
    end
end

b:CreateButton("Spend Color equally", function(value)
    Color()
end)
